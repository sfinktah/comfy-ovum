# Add the unique identifier of each node type you want to convert to cudnn-wrapped.
# Lines starting with a hash are comments.
#
# The identifier you want is the one used in NODE_CLASS_MAPPINGS
# Lines can be either exact class keys or regex patterns:
#   - Exact: just write the class key:   VAEDecode
#   - Regex: start with 're:' or wrap with slashes '/.../':
#       re:^VAE.*
#       /^(?:VAE|K)Decode(?:Tiled)?$/
#     Regex flags:
#       - With slash syntax, append flags after the closing slash: /pattern/imxsauL
#           e.g., /^(?:vae|k)decode(?:tiled)?$/i   # case-insensitive
#       - With re: prefix, you can either use inline flags (?i) inside the pattern
#         or supply a flags prefix as re:i:pattern (letters among i m s x a u L)
#           e.g., re:i:^(?:vae|k)decode(?:tiled)?$
#
# Each non-empty, non-comment line will be attempted for in-place conversion on startup via /ovum/cudnn_wrap_init
#
# For instance, uncomment this next line to indicate you want to always cudnn-wrap KSampler:
# KSampler
VAEDecodeOvum
VAEDecode Ovum
VAEDecode
VAEDecodeTiled
Vae Decode (mtb)
WanVideoDecode
WanVideoImageToVideoEncode
WanVideoDecode

# This line should catch most VAE decoding nodes:
/(video|vae).*(encode|decode)/i
